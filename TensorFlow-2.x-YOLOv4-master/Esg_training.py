# -*- coding: utf-8 -*-
"""ESG_Training

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vEpycnn5ZW45fpGk9utoRo_-OihtWFmJ
"""

from google.colab import drive
drive.mount('/content/drive/')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive/TensorFlow-2.x-YOLOv4-master/

# !unzip -qq "./ESG_Training_Dataset_"

!pip install -r ./requirements.txt

!nvidia-smi

import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'
os.environ['TF_FORCE_GPU_ALLOW_GROWTH'] = 'true'
from tensorflow.python.client import device_lib
print(device_lib.list_local_devices())
import shutil
import numpy as np
import tensorflow as tf
#from tensorflow.keras.utils import plot_model
from yolov3.dataset_train import Dataset_train
from yolov3.dataset_test import Dataset_test

#pickling
import pickle

trainset = Dataset_test('test')

with open('./trainset.p', 'wb') as file: # train set 피클링
  pickle.dump(trainset, file)

testset =  Dataset_train('train')

with open('./testset.p', 'wb') as file: # test set 피클링
  pickle.dump(testset, file)

!python ./train.py

import os
os.environ['CUDA_VISIBLE_DEVICES'] = '0'
import numpy as np
from yolov3.utils import detect_image, Load_Yolo_model, Create_Yolo, make_ingredients_list
from yolov3.configs import *
from yolov3.yolov4 import read_class_names

image_path   = "./IMAGES/Test_img1.jpg" # predict 할 이미지

yolo = Create_Yolo(input_size=YOLO_INPUT_SIZE, CLASSES=TRAIN_CLASSES) # 모델 불러오기
yolo.load_weights(f"./checkpoints/yolov4_custom_val_loss_Best")  # 모델 weight 불러오기
NUM_CLASS = read_class_names(TRAIN_CLASSES)  # CLASSES NUM, 모델 서버 시작하기 전에 실행

image,pred_classes = detect_image(yolo, image_path, "./IMAGES/Test_img1_pred.jpg", 
                     input_size=YOLO_INPUT_SIZE, show=True, CLASSES=TRAIN_CLASSES, rectangle_colors=(255,0,0)) # detect 함수

if len(pred_classes) == 0: print("검출 안 됐음. 다시 사진 업로드 해주세요.")

ingredients_list = make_ingredients_list(NUM_CLASS,pred_classes) # 재료 리스트 벡터화

print(ingredients_list)